name: SonarQube Self-Hosted Scan

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  sonarqube:
    runs-on: ubuntu-latest

    services:
      sonarqube:
        image: sonarqube:community
        ports:
          - 9000:9000
        options: >-
          --health-cmd="curl -s http://localhost:9000/api/system/health | grep -q UP"
          --health-interval=10s
          --health-timeout=10s
          --health-retries=20
        env:
          SONAR_ES_BOOTSTRAP_CHECKS_DISABLE: "true"

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Wait for SonarQube to be UP
        run: |
          echo "Waiting for SonarQube..."
          for i in {1..30}; do
            STATUS=$(curl -s http://localhost:9000/api/system/status | jq -r .status || echo "DOWN")
            echo "Status: $STATUS"
            if [ "$STATUS" = "UP" ]; then break; fi
            sleep 5
          done

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

# 2f7d247f525c4c579d2abf8d1204fc18

# Sonarqube password is Password@123

# squ_f6a4ca576ab9ef45a46d742bbdfdb832d4dc77d1